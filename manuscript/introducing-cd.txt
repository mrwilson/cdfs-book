# Introducing Continuous Delivery to your Workflow

The values of Continuous Delivery are more important than their implementation details or choice of tooling, and these things are often conflated or mistaken for each other. We should strive for simplicity at each step as the central values of Continuous Delivery are easy to understand and just as easy to implement in your workflow.

We'll go step-by-step through the inception of a simple project accompanied by some short code examples and examine how to establishing our feedback cycle quickly. After this we'll take the project into different theoretical problems and how we solve those in a way that's consistent with the Continuous Delivery principles.

So let's take a look at our product specification

> A senior stakeholder has come to you and told you to drop your current project in favour of a new To-Do list app, convinced that it's the Next Big Thing.

You don't need anything complex to implement Continuous Delivery on a green-field project. A fully functioning Continuous Delivery pipeline can be built on the minimal foundations of **version control** and a **walking skeleton**, powered by **automation**.