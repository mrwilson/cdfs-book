## Version Control

If you're not using version control, why aren't you using version control?! Using any form of version control gives you a range of benefits. Share code with other people. Exert control over the source code's history. Provide an easily auditable trail to see exactly who committed what.

There are plenty of options available in two distinct flavours - decentralised and centralised.

**Centralised** version control has a single canonical centralised repository to which all code is committed. Examples include [Subversion](https://subversion.apache.org/) and [Perforce](http://www.perforce.com/)

**Decentralised** version control does not have a centralised canonical repository, although a repository can be designated as such. A copy of the repository has the complete history and can push/pull to any other. Examples include [Git](http://git-scm.com/) and [Mercurial](http://mercurial.selenic.com/).

I won't try and extol the virtues of any of these over any of the others. Different workflows demand different features from their version control software, but **git** is a solid choice for starting out.